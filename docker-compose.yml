services:
  db:
    image: postgres:15
    container_name: pandora_db
    restart: always
    environment:
      POSTGRES_DB: constructora_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Creeper123
    ports:
      - "5433:5432"  # Cambié el puerto expuesto de 5432 a 5433 para evitar conflicto si tienes una base local
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build:
      context: .
      dockerfile: constructora/Dockerfile
    container_name: pandora_backend
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn constructora.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db  # Solo dependemos de la base de datos

  nginx:
    image: nginx:latest
    container_name: pandora_nginx
    ports:
      - "80:80"  # El contenedor de nginx manejará las solicitudes web en el puerto 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Configuración de nginx
      - ./staticfiles:/app/static  # Directorios para archivos estáticos
      - ./media:/app/media  # Directorios para archivos multimedia
    depends_on:
      - web  # nginx depende del servicio web para estar disponible

volumes:
  postgres_data:
